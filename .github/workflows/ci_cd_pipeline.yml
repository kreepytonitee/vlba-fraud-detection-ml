name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2 # Use the dedicated auth action
      with:
        # Pass your service account key to the auth action
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        # Use Workload Identity Federation for authentication (recommended)
        # Create a Service Account, enable Workload Identity Federation,
        # and configure the GitHub OIDC provider for your project.
        # https://github.com/google-github-actions/auth#authenticating-with-workload-identity-federation
        # Replace `your-service-account-email` with your actual service account email.
        # service_account: artifact-registry-access@vlba-fraud-detection.iam.gserviceaccount.com
        # service_account_key: ${{ secrets.GCP_SA_KEY }} # Fallback for non-WIF, or if you prefer SA key
      
    - name: Debug GCloud Authentication State # <--- NEW STEP FOR DEBUGGING
      run: |
        echo "Attempting to list gcloud accounts..."
        gcloud auth list
        echo "Attempting to show current gcloud project..."
        gcloud config get-value project
        echo "Attempting to show current active gcloud account..."
        gcloud config get-value account
      continue-on-error: true # Allow subsequent steps to run even if this fails

    - name: Authorize Docker for GCR
      run: gcloud auth configure-docker

    - name: Get latest git tag (or use sha if no tag)
      id: get_tag
      run: |
        TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo ${{ github.sha }})
        echo "GIT_TAG=$TAG" >> $GITHUB_ENV

    - name: Trigger Cloud Build
      run: |
        gcloud builds submit --config cloudbuild.yml . \
          --substitutions=_CLOUD_RUN_REGION=${{ secrets.CLOUD_RUN_REGION }},_GCS_DATA_BUCKET=${{ secrets.GCS_DATA_BUCKET }},_GCS_MODEL_BUCKET=${{ secrets.GCS_MODEL_BUCKET }},_GIT_TAG=${{ env.GIT_TAG }}
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }} # Pass project ID as env var to gcloud command if needed